3:I[4707,[],""]
5:I[6423,[],""]
6:I[8003,["185","static/chunks/app/layout-05bc13878bf2d84f.js"],""]
7:I[8291,["185","static/chunks/app/layout-05bc13878bf2d84f.js"],"Analytics"]
8:I[4888,["185","static/chunks/app/layout-05bc13878bf2d84f.js"],"GoogleAnalytics"]
4:["slug","future-css-text-wrap-pretty","d"]
0:["W6ut7dmLYdtGKuHz2FDCD",[[["",{"children":["posts",{"children":[["slug","future-css-text-wrap-pretty","d"],{"children":["__PAGE__?{\"slug\":\"future-css-text-wrap-pretty\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["posts",{"children":[["slug","future-css-text-wrap-pretty","d"],{"children":["__PAGE__",{},[["$L1","$L2",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/82ac9842c22a9525.css","precedence":"next","crossOrigin":"$undefined"}]]],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/cd9ac437dbdb55e1.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","script",null,{"type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"{\"@context\":\"https://schema.org\",\"@type\":\"Person\",\"name\":\"Alex Pate\",\"image\":\"https://alexpate.com/avatar.jpeg\",\"url\":\"https://alexpate.com\",\"jobTitle\":\"Product Engineer\",\"sameAs\":[\"https://twitter.com/alexjpate\",\"https://www.github.com/alexpate\",\"https://www.linkedin.com/in/alexjpate/\"]}"}}],["$","$L6",null,{"src":"https://analytics.ahrefs.com/analytics.js","data-key":"Lp8HPBxSc/ujln/5tFmj3A","defer":true}]]}],["$","body",null,{"className":"__className_57d908 __variable_3c557b bg-slate-50","children":[["$","div",null,{"className":"max-w-2xl lg:max-w-xl mx-auto","children":[["$","header",null,{"className":"pt-8 md:pt-16 pb-16 px-4 md:px-0 flex justify-between","children":["$","p",null,{}]}],["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}],["$","footer",null,{"className":"px-4 md:px-0 border-t border-slate-200 py-8 text-slate-700 font-mono text-xs tracking-tight flex justify-between","children":["$","p",null,{"children":["Â© 2025 - ",2025," ","/"," Brendan Royals"]}]}]]}],["$","$L7",null,{}],["$","$L8",null,{"gaId":"G-NRKQPP7M9P"}]]}]]}]],null],null],["$L9",null]]]]
2:[["$","main",null,{"className":"px-4 md:px-0","children":[["$","section",null,{"children":[["$","h1",null,{"className":"font-semibold tracking-tight text-4xl text-slate-900","children":"Future CSS: Text Wrap Pretty"}],["$","span",null,{"className":"text-slate-500 text-sm tracking-tight font-mono block mt-4","children":["Published on"," ",["$","time",null,{"dateTime":"2024-05-21","children":"20 May 2024"}]]}]]}],["$","section",null,{"className":"py-5","children":["$","article",null,{"className":"prose prose-lg","children":"$La"}]}]]}],["$","script",null,{"type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"{\"@context\":\"https://schema.org\",\"@type\":\"BlogPosting\",\"headline\":\"Future CSS: Text Wrap Pretty\",\"url\":\"https://alexpate.com/posts/future-css-text-wrap-pretty\",\"datePublished\":\"2024-05-21\",\"dateModified\":\"2024-05-21\",\"author\":[{\"@type\":\"Person\",\"name\":\"Alex Pate\",\"url\":\"https://alexpate.com\"}]}"}}]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Future CSS: Text Wrap Pretty"}],["$","meta","3",{"name":"description","content":"Exploring the future of CSS text wrapping with the `text-wrap` property"}],["$","meta","4",{"name":"creator","content":"Alex Pate"}],["$","meta","5",{"name":"publisher","content":"Alex Pate"}],["$","meta","6",{"property":"og:title","content":"Future CSS: Text Wrap Pretty"}],["$","meta","7",{"property":"og:description","content":"Exploring the future of CSS text wrapping with the `text-wrap` property"}],["$","meta","8",{"property":"og:url","content":"https://alexpate.com/posts/future-css-text-wrap-pretty"}],["$","meta","9",{"property":"og:site_name","content":"Alex Pate - Product Engineer"}],["$","meta","10",{"property":"og:image","content":"https://alexpate.com/og.png"}],["$","meta","11",{"property":"og:image:width","content":"1200"}],["$","meta","12",{"property":"og:image:height","content":"630"}],["$","meta","13",{"property":"og:image:alt","content":"Alex Pate - Product Engineer"}],["$","meta","14",{"property":"og:type","content":"website"}],["$","meta","15",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","16",{"name":"twitter:creator","content":"@alexjpate"}],["$","meta","17",{"name":"twitter:creator:id","content":"243263662"}],["$","meta","18",{"name":"twitter:title","content":"Future CSS: Text Wrap Pretty"}],["$","meta","19",{"name":"twitter:description","content":"Exploring the future of CSS text wrapping with the `text-wrap` property"}],["$","meta","20",{"name":"twitter:image","content":"https://alexpate.com/og.png"}],["$","link","21",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","meta","22",{"name":"next-size-adjust"}]]
1:null
a:[["$","p",null,{"children":"Orphan words are a common problem in web design. They can make a page look unbalanced and distract the reader."}],"\n",["$","p",null,{"children":"They're also notoriously difficult to fix, particularly in responsive web design, where text can reflow at different screen sizes."}],"\n",["$","p",null,{"children":["But did you know that ",["$","strong",null,{"children":"you can"}]," fix this natively in CSS?"]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"pretty"}]," and ",["$","code",null,{"children":"balance"}]," are two new values for the ",["$","code",null,{"children":"text-wrap"}]," property that are proposed in the CSS Text Module Level 4. They're designed to help prevent single words from being left on a line by themselves, also known as \"orphans\"."]}],"\n",["$","p",null,{"children":["But before we dive into how to use them, let's take a step back and look at the ",["$","code",null,{"children":"text-wrap"}]," property itself."]}],"\n",["$","h2",null,{"children":"The text-wrap property"}],"\n",["$","p",null,{"children":"The text-wrap property helps us control how, as the name suggests, text wraps in an element. Personally, I use it a lot when rendering code blocks on my blog, as it helps to ensure that code snippets don't break randomly in the middle of a word."}],"\n",["$","h2",null,{"children":"1) text-wrap: balance"}],"\n",["$","p",null,{"children":["The ",["$","code",null,{"children":"balance"}]," value is the first new addition to the ",["$","code",null,{"children":"text-wrap"}]," property. It's designed to help prevent orphans in text by balancing the number of words on each line."]}],"\n",["$","p",null,{"children":"For example, let's say you're building a hero section:"}],"\n",["$","div",null,{"className":"w-full flex flex-col items-center justify-center gap-2 px-8 py-32 bg-slate-200 rounded-xl","children":[["$","span",null,{"className":"text-2xl font-semibold text-slate-900","children":"This is my headline text"}],["$","span",null,{"className":"text-xl text-slate-700 max-w-md text-center","children":"And this is my subheading text which is a little bit longer"}]]}],"\n",["$","p",null,{"children":["Notice how the number of words on the first line is significantly greater than on the last? That's not ideal. But with ",["$","code",null,{"children":"text-wrap: balance"}],", we can fix it:"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-css","children":[["$","span",null,{"className":"hljs-selector-class","children":".subheading"}]," {\n  text-wrap: balance;\n}\n"]}]}],"\n",["$","div",null,{"className":"w-full flex flex-col items-center justify-center gap-2 px-8 py-32 bg-slate-200 rounded-xl","children":[["$","span",null,{"className":"text-2xl font-semibold text-slate-900","children":"This is my headline text"}],["$","span",null,{"className":"text-xl text-slate-700 max-w-md text-center [text-wrap:balance]","children":"And this is my subheading text which is a little bit longer"}]]}],"\n",["$","p",null,{"children":"As you can see, the text is now \"balanced\" across the two lines."}],"\n",["$","h2",null,{"children":"2) text-wrap: pretty"}],"\n",["$","p",null,{"children":["The ",["$","code",null,{"children":"pretty"}]," value is another new addition to the ",["$","code",null,{"children":"text-wrap"}]," property. It's designed to help prevent orphans at the end of chunks of text, making it a good candidate for use in long paragraphs."]}],"\n",["$","p",null,{"children":["Let's use our hero section example again, but this time with ",["$","code",null,{"children":"text-wrap: pretty"}],":"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-css","children":[["$","span",null,{"className":"hljs-selector-class","children":".subheading"}]," {\n  text-wrap: pretty;\n}\n"]}]}],"\n",["$","div",null,{"className":"w-full flex flex-col items-center justify-center gap-2 px-8 py-32 bg-slate-200 rounded-xl","children":[["$","span",null,{"className":"text-2xl font-semibold text-slate-900","children":"This is my headline text"}],["$","span",null,{"className":"text-xl text-slate-700 max-w-md text-center [text-wrap:pretty]","children":"And this is my subheading text which is a little bit longer"}]]}],"\n",["$","p",null,{"children":"As you can see, although the number of words on each line is different, there aren't any orphaned words."}],"\n",["$","h3",null,{"children":["When should I use ",["$","code",null,{"children":"pretty"}]," vs ",["$","code",null,{"children":"balance"}],"?"]}],"\n",["$","p",null,{"children":["Although similar, there are some key differences between ",["$","code",null,{"children":"pretty"}]," and ",["$","code",null,{"children":"balance"}],":"]}],"\n",["$","p",null,{"children":["You can think of ",["$","code",null,{"children":"balance"}]," as a way to ensure that the number of words on each line is roughly the same. This is great for headings, where you want to ensure that the text is balanced across multiple lines."]}],"\n",["$","p",null,{"children":["On the other hand, ",["$","code",null,{"children":"pretty"}]," is a way to ensure that there aren't any orphaned words at the end of a block of text. This is great for long paragraphs, where you want to ensure that the text flows nicely."]}],"\n",["$","p",null,{"children":["Here's a side-by-side comparison of non-wrapped text, ",["$","code",null,{"children":"pretty"}],", and ",["$","code",null,{"children":"balance"}],". Notice how with ",["$","code",null,{"children":"balance"}]," the length of the lines is significantly shorter, albeit more consistent."]}],"\n",["$","div",null,{"className":"flex flex-col gap-4","children":[["$","div",null,{"className":"w-full flex flex-col justify-center gap-2 px-7 md:px-16 py-8 bg-stone-200 rounded-xl","children":[["$","span",null,{"className":"text-base font-medium text-slate-900","children":"text-wrap: wrap (default value)"}],["$","span",null,{"className":"text-base text-slate-700 max-w-md","children":"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque."}]]}],["$","div",null,{"className":"w-full flex flex-col justify-center gap-2 px-7 md:px-16 py-8 bg-stone-200 rounded-xl","children":[["$","span",null,{"className":"text-base font-medium text-slate-900","children":"text-wrap: pretty"}],["$","span",null,{"className":"text-base text-slate-700 max-w-md [text-wrap:pretty]","children":"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque."}]]}],["$","div",null,{"className":"w-full flex flex-col justify-center gap-2 px-7 md:px-16 py-8 bg-stone-200 rounded-xl","children":[["$","span",null,{"className":"text-base font-medium text-slate-900","children":"text-wrap: balance"}],["$","span",null,{"className":"text-base text-slate-700 max-w-md [text-wrap:balance]","children":"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque."}]]}]]}],"\n",["$","h3",null,{"children":"Gotchas"}],"\n",["$","p",null,{"children":["Okay, so why not just use ",["$","code",null,{"children":"text-wrap: pretty | balance"}]," all the time? Well, there are a few gotchas to be aware of:"]}],"\n",["$","h4",null,{"children":"Browser support"}],"\n",["$","p",null,{"children":["Firstly, both of these properties are still in the \"proposal\" stage. This means that they're not supported in all browsers yet. This is a great enhancement for the future, but don't rely on it for critical text. As of May 2024, ",["$","code",null,{"children":"balance"}]," is partially supported in the latest versions Chrome, Firefox, and Safari, while ",["$","code",null,{"children":"pretty"}]," is only supported in Chrome and Edge."]}],"\n",["$","h4",null,{"children":"Limits"}],"\n",["$","p",null,{"children":["Browsers also implement a limit on the number of lines considered when wrapping text with ",["$","code",null,{"children":"balance"}],". This is to prevent performance issues, but it can also lead to unexpected results if you're not aware of it. ",["$","code",null,{"children":"pretty"}]," doesn't have this limit, but this can lead to performance issues. As such, consider using ",["$","code",null,{"children":"balance"}]," for headings and ",["$","code",null,{"children":"pretty"}]," for long paragraphs where absolutely necessary."]}],"\n",["$","h4",null,{"children":"Performance"}],"\n",["$","p",null,{"children":["Secondly, there's a performance cost. Behind the scenes, the browser engine has to make some relatively expensive computations. As mentioned above ",["$","code",null,{"children":"balance"}]," will only be computed on a limited number of lines in order to avoid an overly expensive computation, whilst ",["$","code",null,{"children":"pretty"}]," has no such limit. As such, you should use ",["$","code",null,{"children":"pretty"}]," sparingly and only when you really need it."]}],"\n",["$","h3",null,{"children":"Further reading"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","a",null,{"href":"https://developer.mozilla.org/en-US/docs/Web/CSS/text-wrap","children":"MDN Docs"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://caniuse.com/mdn-css_properties_text-wrap_pretty","children":"Can I Use - Pretty"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://caniuse.com/css-text-wrap-balance","children":"Can I Use - Balance"}]}],"\n"]}]]
