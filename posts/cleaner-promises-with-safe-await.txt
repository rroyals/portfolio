3:I[4707,[],""]
5:I[6423,[],""]
6:I[8003,["185","static/chunks/app/layout-05bc13878bf2d84f.js"],""]
7:I[8291,["185","static/chunks/app/layout-05bc13878bf2d84f.js"],"Analytics"]
8:I[4888,["185","static/chunks/app/layout-05bc13878bf2d84f.js"],"GoogleAnalytics"]
4:["slug","cleaner-promises-with-safe-await","d"]
0:["W6ut7dmLYdtGKuHz2FDCD",[[["",{"children":["posts",{"children":[["slug","cleaner-promises-with-safe-await","d"],{"children":["__PAGE__?{\"slug\":\"cleaner-promises-with-safe-await\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["posts",{"children":[["slug","cleaner-promises-with-safe-await","d"],{"children":["__PAGE__",{},[["$L1","$L2",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/82ac9842c22a9525.css","precedence":"next","crossOrigin":"$undefined"}]]],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/cd9ac437dbdb55e1.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","script",null,{"type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"{\"@context\":\"https://schema.org\",\"@type\":\"Person\",\"name\":\"Alex Pate\",\"image\":\"https://alexpate.com/avatar.jpeg\",\"url\":\"https://alexpate.com\",\"jobTitle\":\"Product Engineer\",\"sameAs\":[\"https://twitter.com/alexjpate\",\"https://www.github.com/alexpate\",\"https://www.linkedin.com/in/alexjpate/\"]}"}}],["$","$L6",null,{"src":"https://analytics.ahrefs.com/analytics.js","data-key":"Lp8HPBxSc/ujln/5tFmj3A","defer":true}]]}],["$","body",null,{"className":"__className_57d908 __variable_3c557b bg-slate-50","children":[["$","div",null,{"className":"max-w-2xl lg:max-w-xl mx-auto","children":[["$","header",null,{"className":"pt-8 md:pt-16 pb-16 px-4 md:px-0 flex justify-between","children":["$","p",null,{}]}],["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}],["$","footer",null,{"className":"px-4 md:px-0 border-t border-slate-200 py-8 text-slate-700 font-mono text-xs tracking-tight flex justify-between","children":["$","p",null,{"children":["Â© 2025 - ",2025," ","/"," Brendan Royals"]}]}]]}],["$","$L7",null,{}],["$","$L8",null,{"gaId":"G-NRKQPP7M9P"}]]}]]}]],null],null],["$L9",null]]]]
2:[["$","main",null,{"className":"px-4 md:px-0","children":[["$","section",null,{"children":[["$","h1",null,{"className":"font-semibold tracking-tight text-4xl text-slate-900","children":"Cleaner JavaScript promises with safe-await"}],["$","span",null,{"className":"text-slate-500 text-sm tracking-tight font-mono block mt-4","children":["Published on"," ",["$","time",null,{"dateTime":"2024-05-22","children":"21 May 2024"}]]}]]}],["$","section",null,{"className":"py-5","children":["$","article",null,{"className":"prose prose-lg","children":"$La"}]}]]}],["$","script",null,{"type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"{\"@context\":\"https://schema.org\",\"@type\":\"BlogPosting\",\"headline\":\"Cleaner JavaScript promises with safe-await\",\"url\":\"https://alexpate.com/posts/cleaner-promises-with-safe-await\",\"datePublished\":\"2024-05-22\",\"dateModified\":\"2024-05-22\",\"author\":[{\"@type\":\"Person\",\"name\":\"Alex Pate\",\"url\":\"https://alexpate.com\"}]}"}}]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Cleaner JavaScript promises with safe-await"}],["$","meta","3",{"name":"description","content":"Explore how the safe-await pattern can simplify handling JavaScript promises, making code cleaner and more maintainable."}],["$","meta","4",{"name":"creator","content":"Alex Pate"}],["$","meta","5",{"name":"publisher","content":"Alex Pate"}],["$","meta","6",{"property":"og:title","content":"Cleaner JavaScript promises with safe-await"}],["$","meta","7",{"property":"og:description","content":"Explore how the safe-await pattern can simplify handling JavaScript promises, making code cleaner and more maintainable."}],["$","meta","8",{"property":"og:url","content":"https://alexpate.com/posts/cleaner-promises-with-safe-await"}],["$","meta","9",{"property":"og:site_name","content":"Alex Pate - Product Engineer"}],["$","meta","10",{"property":"og:image","content":"https://alexpate.com/og.png"}],["$","meta","11",{"property":"og:image:width","content":"1200"}],["$","meta","12",{"property":"og:image:height","content":"630"}],["$","meta","13",{"property":"og:image:alt","content":"Alex Pate - Product Engineer"}],["$","meta","14",{"property":"og:type","content":"website"}],["$","meta","15",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","16",{"name":"twitter:creator","content":"@alexjpate"}],["$","meta","17",{"name":"twitter:creator:id","content":"243263662"}],["$","meta","18",{"name":"twitter:title","content":"Cleaner JavaScript promises with safe-await"}],["$","meta","19",{"name":"twitter:description","content":"Explore how the safe-await pattern can simplify handling JavaScript promises, making code cleaner and more maintainable."}],["$","meta","20",{"name":"twitter:image","content":"https://alexpate.com/og.png"}],["$","link","21",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","meta","22",{"name":"next-size-adjust"}]]
1:null
a:[["$","p",null,{"children":"Nested try/catch blocks are a common pattern in JavaScript when working with promises. However, they often lead to hard-to-read and maintain code."}],"\n",["$","p",null,{"children":["To better understand the problem, let's look at an example where we have a series of promises, each relying on the result of the previous one ",["$","em",null,{"children":["(or if you just want to skip to the solution, ",["$","a",null,{"href":"#solution","children":"click here"}],"!)"]}]]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-javascript","children":[["$","span",null,{"className":"hljs-keyword","children":"async"}]," ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"doSomething"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"try"}]," {\n    ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," result = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title function_","children":"someFunction"}],"();\n    ",["$","span",null,{"className":"hljs-keyword","children":"try"}]," {\n      ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," anotherResult = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title function_","children":"anotherFunction"}],"(result);\n      ",["$","span",null,{"className":"hljs-keyword","children":"try"}]," {\n        ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," finalResult = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title function_","children":"finalFunction"}],"(anotherResult);\n        ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," finalResult;\n      } ",["$","span",null,{"className":"hljs-keyword","children":"catch"}]," (err) {\n        ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"error"}],"(err);\n      }\n    } ",["$","span",null,{"className":"hljs-keyword","children":"catch"}]," (err) {\n      ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"error"}],"(err);\n    }\n  } ",["$","span",null,{"className":"hljs-keyword","children":"catch"}]," (err) {\n    ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"error"}],"(err);\n  }\n}\n"]}]}],"\n",["$","h4",null,{"children":"What's the Problem?"}],"\n",["$","p",null,{"children":"This code is hard to read and maintain. The final return result is buried halfway through the script, making it difficult to trace error handling. Although each try/catch block is small here, in a real-world application, they might contain much more code."}],"\n",["$","h4",null,{"children":"A Better Pattern: Single try/catch Block"}],"\n",["$","p",null,{"children":"One way to clean this up is to use a single try/catch block around the entire promise chain:"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-javascript","children":[["$","span",null,{"className":"hljs-keyword","children":"async"}]," ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"doSomething"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"try"}]," {\n    ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," result = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title function_","children":"someFunction"}],"();\n    ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," anotherResult = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title function_","children":"anotherFunction"}],"(result);\n    ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," finalResult = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title function_","children":"finalFunction"}],"(anotherResult);\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," finalResult;\n  } ",["$","span",null,{"className":"hljs-keyword","children":"catch"}]," (err) {\n    ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"error"}],"(err);\n  }\n}\n"]}]}],"\n",["$","p",null,{"children":"This approach is an improvement, but it still has a drawback: handling all errors in a single catch block can obscure where the error originated."}],"\n",["$","h3",null,{"children":"The Go Error Handling Pattern"}],"\n",["$","p",null,{"children":"At Monzo, I was introduced to Go, where errors are always returned from functions, allowing for multiple return values that include both the result and the error. Here's how the previous example would look using the Go error handling pattern:"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-go","children":[["$","span",null,{"className":"hljs-function","children":[["$","span",null,{"className":"hljs-keyword","children":"func"}]," ",["$","span",null,{"className":"hljs-title","children":"doSomething"}],["$","span",null,{"className":"hljs-params","children":"()"}]]}]," (finalResult, ",["$","span",null,{"className":"hljs-type","children":"error"}],") {\n  result, err := someFunction()\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," err != ",["$","span",null,{"className":"hljs-literal","children":"nil"}]," {\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-literal","children":"nil"}],", err\n  }\n\n  anotherResult, err := anotherFunction(result)\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," err != ",["$","span",null,{"className":"hljs-literal","children":"nil"}]," {\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-literal","children":"nil"}],", err\n  }\n\n  finalResult, err := finalFunction(anotherResult)\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," err != ",["$","span",null,{"className":"hljs-literal","children":"nil"}]," {\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-literal","children":"nil"}],", err\n  }\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," finalResult, ",["$","span",null,{"className":"hljs-literal","children":"nil"}],"\n}\n"]}]}],"\n",["$","p",null,{"children":"This pattern makes it easy to see where errors are being returned and handle them accordingly."}],"\n",["$","span",null,{"id":"solution"}],"\n",["$","h3",null,{"children":"Back to JavaScript: The Safe-Await Pattern"}],"\n",["$","p",null,{"children":["Recently, I discovered the ",["$","a",null,{"href":"https://github.com/DavidWells/safe-await","children":"safe-await"}],"\npackage, which provides a similar pattern for JavaScript promises. Here's how we\ncan rewrite our example using safe-await:"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-javascript","children":[["$","span",null,{"className":"hljs-keyword","children":"async"}]," ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"doSomething"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," [error1, result] = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title function_","children":"safeAwait"}],"(",["$","span",null,{"className":"hljs-title function_","children":"someFunction"}],"());\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (error1) {\n    ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"error"}],"(error1);\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}],";\n  }\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," [error2, anotherResult] = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title function_","children":"safeAwait"}],"(",["$","span",null,{"className":"hljs-title function_","children":"anotherFunction"}],"(result));\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (error2) {\n    ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"error"}],"(error2);\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}],";\n  }\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," [error3, finalResult] = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title function_","children":"safeAwait"}],"(",["$","span",null,{"className":"hljs-title function_","children":"finalFunction"}],"(anotherResult));\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (error3) {\n    ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"error"}],"(error3);\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}],";\n  }\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," finalResult;\n}\n"]}]}],"\n",["$","p",null,{"children":"Although this pattern is slightly more verbose, it is much easier to read and maintain."}],"\n",["$","p",null,{"children":"While I have found the safe-await pattern useful in my codebases, itâs important to consider whatâs best for your team and project. This pattern provides a clearer structure for handling asynchronous operations and errors, but you should always consider the trade-offs when introducing new patterns to your codebase."}],"\n",["$","h3",null,{"children":"Credits"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["David Wells for the ",["$","a",null,{"href":"https://www.npmjs.com/package/safe-await","children":"safe-await"}]," package."]}],"\n"]}]]
